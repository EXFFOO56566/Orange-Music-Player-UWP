#pragma checksum "C:\Users\spider\Desktop\PROJECTS\MICROSOFT\ORANGE MUSIC PLAYER\OrangeMusicPlayer\OrangeMusicPlayer\PlayerView.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "C7F1CC03BBBA093391C93D0C465530ABFF1701E0A82558E29707C563BF7B072E"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Orange_Music_Player
{
    partial class PlayerView : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_Control_IsEnabled(global::Windows.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_SplitView_IsPaneOpen(global::Windows.UI.Xaml.Controls.SplitView obj, global::System.Boolean value)
            {
                obj.IsPaneOpen = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ContentDialog_IsPrimaryButtonEnabled(global::Windows.UI.Xaml.Controls.ContentDialog obj, global::System.Boolean value)
            {
                obj.IsPrimaryButtonEnabled = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_RangeBase_Value(global::Windows.UI.Xaml.Controls.Primitives.RangeBase obj, global::System.Double value)
            {
                obj.Value = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ProgressRing_IsActive(global::Windows.UI.Xaml.Controls.ProgressRing obj, global::System.Boolean value)
            {
                obj.IsActive = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Opacity(global::Windows.UI.Xaml.UIElement obj, global::System.Double value)
            {
                obj.Opacity = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_SymbolIcon_Symbol(global::Windows.UI.Xaml.Controls.SymbolIcon obj, global::Windows.UI.Xaml.Controls.Symbol value)
            {
                obj.Symbol = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Image_Source(global::Windows.UI.Xaml.Controls.Image obj, global::Windows.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.Source = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(global::Windows.UI.Xaml.Controls.Primitives.Selector obj, global::System.Int32 value)
            {
                obj.SelectedIndex = value;
            }
            public static void Set_Orange_Music_Player_AttachedProperties_Ap_PlaylistId(global::Windows.UI.Xaml.DependencyObject obj, global::System.Int32 value)
            {
                global::Orange_Music_Player.AttachedProperties.Ap.SetPlaylistId(obj, value);
            }
            public static void Set_Orange_Music_Player_AttachedProperties_Ap_PlaylistName(global::Windows.UI.Xaml.DependencyObject obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                global::Orange_Music_Player.AttachedProperties.Ap.SetPlaylistName(obj, value);
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class PlayerView_obj35_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IPlayerView_Bindings
        {
            private global::Orange_Music_Player.PlaylistReference dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj35;
            private global::Windows.UI.Xaml.Controls.TextBlock obj36;
            private global::Windows.UI.Xaml.Controls.Button obj37;
            private global::Windows.UI.Xaml.Controls.Button obj38;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj35PlaylistIdDisabled = false;
            private static bool isobj36TextDisabled = false;
            private static bool isobj37PlaylistIdDisabled = false;
            private static bool isobj37PlaylistNameDisabled = false;
            private static bool isobj38PlaylistIdDisabled = false;
            private static bool isobj38PlaylistNameDisabled = false;

            private PlayerView_obj35_BindingsTracking bindingsTracking;

            public PlayerView_obj35_Bindings()
            {
                this.bindingsTracking = new PlayerView_obj35_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 257 && columnNumber == 39)
                {
                    isobj35PlaylistIdDisabled = true;
                }
                else if (lineNumber == 263 && columnNumber == 48)
                {
                    isobj36TextDisabled = true;
                }
                else if (lineNumber == 265 && columnNumber == 49)
                {
                    isobj37PlaylistIdDisabled = true;
                }
                else if (lineNumber == 265 && columnNumber == 93)
                {
                    isobj37PlaylistNameDisabled = true;
                }
                else if (lineNumber == 268 && columnNumber == 49)
                {
                    isobj38PlaylistIdDisabled = true;
                }
                else if (lineNumber == 268 && columnNumber == 93)
                {
                    isobj38PlaylistNameDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 35: // PlayerView.xaml line 257
                        this.obj35 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 36: // PlayerView.xaml line 263
                        this.obj36 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 37: // PlayerView.xaml line 265
                        this.obj37 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 38: // PlayerView.xaml line 268
                        this.obj38 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj35.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::Orange_Music_Player.PlaylistReference) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IPlayerView_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Orange_Music_Player.PlaylistReference)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Orange_Music_Player.PlaylistReference obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Id(obj.Id, phase);
                        this.Update_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Id(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // PlayerView.xaml line 257
                    if (!isobj35PlaylistIdDisabled)
                    {
                        if ((this.obj35.Target as global::Windows.UI.Xaml.Controls.Grid) != null)
                        {
                            XamlBindingSetters.Set_Orange_Music_Player_AttachedProperties_Ap_PlaylistId((this.obj35.Target as global::Windows.UI.Xaml.Controls.Grid), obj);
                        }
                    }
                    // PlayerView.xaml line 265
                    if (!isobj37PlaylistIdDisabled)
                    {
                        XamlBindingSetters.Set_Orange_Music_Player_AttachedProperties_Ap_PlaylistId(this.obj37, obj);
                    }
                    // PlayerView.xaml line 268
                    if (!isobj38PlaylistIdDisabled)
                    {
                        XamlBindingSetters.Set_Orange_Music_Player_AttachedProperties_Ap_PlaylistId(this.obj38, obj);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // PlayerView.xaml line 263
                    if (!isobj36TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj36, obj, null);
                    }
                    // PlayerView.xaml line 265
                    if (!isobj37PlaylistNameDisabled)
                    {
                        XamlBindingSetters.Set_Orange_Music_Player_AttachedProperties_Ap_PlaylistName(this.obj37, obj, null);
                    }
                    // PlayerView.xaml line 268
                    if (!isobj38PlaylistNameDisabled)
                    {
                        XamlBindingSetters.Set_Orange_Music_Player_AttachedProperties_Ap_PlaylistName(this.obj38, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class PlayerView_obj35_BindingsTracking
            {
                private global::System.WeakReference<PlayerView_obj35_Bindings> weakRefToBindingObj; 

                public PlayerView_obj35_BindingsTracking(PlayerView_obj35_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<PlayerView_obj35_Bindings>(obj);
                }

                public PlayerView_obj35_Bindings TryGetBindingObject()
                {
                    PlayerView_obj35_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                }

            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class PlayerView_obj49_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IPlayerView_Bindings
        {
            private global::Orange_Music_Player.PlaylistItem dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj49;
            private global::Windows.UI.Xaml.Controls.TextBlock obj50;
            private global::Windows.UI.Xaml.Controls.TextBlock obj51;
            private global::Windows.UI.Xaml.Controls.TextBlock obj52;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj50TextDisabled = false;
            private static bool isobj51TextDisabled = false;
            private static bool isobj52TextDisabled = false;

            public PlayerView_obj49_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 220 && columnNumber == 40)
                {
                    isobj50TextDisabled = true;
                }
                else if (lineNumber == 222 && columnNumber == 44)
                {
                    isobj51TextDisabled = true;
                }
                else if (lineNumber == 224 && columnNumber == 44)
                {
                    isobj52TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 49: // PlayerView.xaml line 215
                        this.obj49 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 50: // PlayerView.xaml line 220
                        this.obj50 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 51: // PlayerView.xaml line 222
                        this.obj51 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 52: // PlayerView.xaml line 224
                        this.obj52 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj49.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::Orange_Music_Player.PlaylistItem) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // IPlayerView_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Orange_Music_Player.PlaylistItem)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Orange_Music_Player.PlaylistItem obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Title(obj.Title, phase);
                        this.Update_Album(obj.Album, phase);
                        this.Update_Artist(obj.Artist, phase);
                    }
                }
            }
            private void Update_Title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // PlayerView.xaml line 220
                    if (!isobj50TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj50, obj, null);
                    }
                }
            }
            private void Update_Album(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // PlayerView.xaml line 222
                    if (!isobj51TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj51, obj, null);
                    }
                }
            }
            private void Update_Artist(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // PlayerView.xaml line 224
                    if (!isobj52TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj52, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class PlayerView_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IPlayerView_Bindings
        {
            private global::Orange_Music_Player.PlayerView dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.ProgressBar obj7;
            private global::Windows.UI.Xaml.Controls.SplitView obj9;
            private global::Windows.UI.Xaml.Controls.ContentDialog obj10;
            private global::Windows.UI.Xaml.Controls.ContentDialog obj11;
            private global::Windows.UI.Xaml.Controls.ProgressBar obj13;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj15;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj16;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj17;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj18;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj19;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj20;
            private global::Windows.UI.Xaml.Controls.ProgressRing obj21;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj22;
            private global::Windows.UI.Xaml.Controls.Image obj23;
            private global::Windows.UI.Xaml.Controls.Image obj24;
            private global::Windows.UI.Xaml.Controls.TextBlock obj25;
            private global::Windows.UI.Xaml.Controls.TextBlock obj27;
            private global::Windows.UI.Xaml.Controls.TextBlock obj29;
            private global::Windows.UI.Xaml.Controls.TextBlock obj30;
            private global::Windows.UI.Xaml.Controls.TextBox obj31;
            private global::Windows.UI.Xaml.Controls.TextBlock obj32;
            private global::Windows.UI.Xaml.Controls.ListBox obj33;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj39;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj40;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj41;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj42;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj43;
            private global::Windows.UI.Xaml.Controls.ListView obj45;
            private global::Windows.UI.Xaml.Controls.MenuFlyoutItem obj47;
            private global::Windows.UI.Xaml.Controls.Image obj53;
            private global::Windows.UI.Xaml.Controls.Image obj54;
            private global::Windows.UI.Xaml.Controls.TextBlock obj55;
            private global::Windows.UI.Xaml.Controls.StackPanel obj56;
            private global::Windows.UI.Xaml.Controls.TextBlock obj57;
            private global::Windows.UI.Xaml.Controls.TextBlock obj58;

            // Fields for each event bindings event handler.
            private global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogButtonClickEventArgs> obj10PrimaryButtonClick;
            private global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogButtonClickEventArgs> obj11PrimaryButtonClick;
            private global::Windows.UI.Xaml.Input.PointerEventHandler obj13PointerEntered;
            private global::Windows.UI.Xaml.Input.PointerEventHandler obj13PointerExited;
            private global::Windows.UI.Xaml.RoutedEventHandler obj15Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj16Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj17Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj18Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj19Click;
            private global::Windows.UI.Xaml.Controls.TextChangedEventHandler obj31TextChanged;
            private global::Windows.UI.Xaml.RoutedEventHandler obj39Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj40Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj41Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj42Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj43Click;
            private global::Windows.UI.Xaml.Input.DoubleTappedEventHandler obj45DoubleTapped;
            private global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler obj45DragItemsStarting;
            private global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs> obj45DragItemsCompleted;
            private global::Windows.UI.Xaml.RoutedEventHandler obj47Click;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj7IsEnabledDisabled = false;
            private static bool isobj7VisibilityDisabled = false;
            private static bool isobj9IsPaneOpenDisabled = false;
            private static bool isobj10IsPrimaryButtonEnabledDisabled = false;
            private static bool isobj13ValueDisabled = false;
            private static bool isobj16IsEnabledDisabled = false;
            private static bool isobj18OpacityDisabled = false;
            private static bool isobj19OpacityDisabled = false;
            private static bool isobj20SymbolDisabled = false;
            private static bool isobj21IsActiveDisabled = false;
            private static bool isobj21VisibilityDisabled = false;
            private static bool isobj22SymbolDisabled = false;
            private static bool isobj22VisibilityDisabled = false;
            private static bool isobj23SourceDisabled = false;
            private static bool isobj24VisibilityDisabled = false;
            private static bool isobj25TextDisabled = false;
            private static bool isobj27TextDisabled = false;
            private static bool isobj29TextDisabled = false;
            private static bool isobj30TextDisabled = false;
            private static bool isobj31TextDisabled = false;
            private static bool isobj32VisibilityDisabled = false;
            private static bool isobj33ItemsSourceDisabled = false;
            private static bool isobj39IsEnabledDisabled = false;
            private static bool isobj42IsEnabledDisabled = false;
            private static bool isobj43IsEnabledDisabled = false;
            private static bool isobj45ItemsSourceDisabled = false;
            private static bool isobj45SelectedIndexDisabled = false;
            private static bool isobj53SourceDisabled = false;
            private static bool isobj53VisibilityDisabled = false;
            private static bool isobj54VisibilityDisabled = false;
            private static bool isobj55TextDisabled = false;
            private static bool isobj55VisibilityDisabled = false;
            private static bool isobj56VisibilityDisabled = false;
            private static bool isobj57TextDisabled = false;
            private static bool isobj58TextDisabled = false;

            private PlayerView_obj1_BindingsTracking bindingsTracking;

            public PlayerView_obj1_Bindings()
            {
                this.bindingsTracking = new PlayerView_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 172 && columnNumber == 45)
                {
                    isobj7IsEnabledDisabled = true;
                }
                else if (lineNumber == 172 && columnNumber == 93)
                {
                    isobj7VisibilityDisabled = true;
                }
                else if (lineNumber == 233 && columnNumber == 41)
                {
                    isobj9IsPaneOpenDisabled = true;
                }
                else if (lineNumber == 281 && columnNumber == 77)
                {
                    isobj10IsPrimaryButtonEnabledDisabled = true;
                }
                else if (lineNumber == 281 && columnNumber == 158)
                {
                    this.obj10.PrimaryButtonClick -= obj10PrimaryButtonClick;
                }
                else if (lineNumber == 289 && columnNumber == 131)
                {
                    this.obj11.PrimaryButtonClick -= obj11PrimaryButtonClick;
                }
                else if (lineNumber == 300 && columnNumber == 228)
                {
                    isobj13ValueDisabled = true;
                }
                else if (lineNumber == 300 && columnNumber == 118)
                {
                    this.obj13.PointerEntered -= obj13PointerEntered;
                }
                else if (lineNumber == 300 && columnNumber == 160)
                {
                    this.obj13.PointerExited -= obj13PointerExited;
                }
                else if (lineNumber == 326 && columnNumber == 35)
                {
                    this.obj15.Click -= obj15Click;
                }
                else if (lineNumber == 331 && columnNumber == 107)
                {
                    isobj16IsEnabledDisabled = true;
                }
                else if (lineNumber == 331 && columnNumber == 35)
                {
                    this.obj16.Click -= obj16Click;
                }
                else if (lineNumber == 340 && columnNumber == 35)
                {
                    this.obj17.Click -= obj17Click;
                }
                else if (lineNumber == 346 && columnNumber == 123)
                {
                    isobj18OpacityDisabled = true;
                }
                else if (lineNumber == 346 && columnNumber == 35)
                {
                    this.obj18.Click -= obj18Click;
                }
                else if (lineNumber == 351 && columnNumber == 115)
                {
                    isobj19OpacityDisabled = true;
                }
                else if (lineNumber == 351 && columnNumber == 35)
                {
                    this.obj19.Click -= obj19Click;
                }
                else if (lineNumber == 352 && columnNumber == 37)
                {
                    isobj20SymbolDisabled = true;
                }
                else if (lineNumber == 333 && columnNumber == 43)
                {
                    isobj21IsActiveDisabled = true;
                }
                else if (lineNumber == 333 && columnNumber == 93)
                {
                    isobj21VisibilityDisabled = true;
                }
                else if (lineNumber == 334 && columnNumber == 41)
                {
                    isobj22SymbolDisabled = true;
                }
                else if (lineNumber == 334 && columnNumber == 142)
                {
                    isobj22VisibilityDisabled = true;
                }
                else if (lineNumber == 316 && columnNumber == 57)
                {
                    isobj23SourceDisabled = true;
                }
                else if (lineNumber == 317 && columnNumber == 94)
                {
                    isobj24VisibilityDisabled = true;
                }
                else if (lineNumber == 318 && columnNumber == 56)
                {
                    isobj25TextDisabled = true;
                }
                else if (lineNumber == 320 && columnNumber == 56)
                {
                    isobj27TextDisabled = true;
                }
                else if (lineNumber == 322 && columnNumber == 57)
                {
                    isobj29TextDisabled = true;
                }
                else if (lineNumber == 292 && columnNumber == 28)
                {
                    isobj30TextDisabled = true;
                }
                else if (lineNumber == 283 && columnNumber == 52)
                {
                    isobj31TextDisabled = true;
                }
                else if (lineNumber == 283 && columnNumber == 137)
                {
                    this.obj31.TextChanged -= obj31TextChanged;
                }
                else if (lineNumber == 285 && columnNumber == 79)
                {
                    isobj32VisibilityDisabled = true;
                }
                else if (lineNumber == 248 && columnNumber == 153)
                {
                    isobj33ItemsSourceDisabled = true;
                }
                else if (lineNumber == 242 && columnNumber == 255)
                {
                    isobj39IsEnabledDisabled = true;
                }
                else if (lineNumber == 242 && columnNumber == 102)
                {
                    this.obj39.Click -= obj39Click;
                }
                else if (lineNumber == 243 && columnNumber == 63)
                {
                    this.obj40.Click -= obj40Click;
                }
                else if (lineNumber == 244 && columnNumber == 64)
                {
                    this.obj41.Click -= obj41Click;
                }
                else if (lineNumber == 245 && columnNumber == 138)
                {
                    isobj42IsEnabledDisabled = true;
                }
                else if (lineNumber == 245 && columnNumber == 67)
                {
                    this.obj42.Click -= obj42Click;
                }
                else if (lineNumber == 246 && columnNumber == 146)
                {
                    isobj43IsEnabledDisabled = true;
                }
                else if (lineNumber == 246 && columnNumber == 68)
                {
                    this.obj43.Click -= obj43Click;
                }
                else if (lineNumber == 200 && columnNumber == 128)
                {
                    isobj45ItemsSourceDisabled = true;
                }
                else if (lineNumber == 200 && columnNumber == 186)
                {
                    isobj45SelectedIndexDisabled = true;
                }
                else if (lineNumber == 200 && columnNumber == 45)
                {
                    this.obj45.DoubleTapped -= obj45DoubleTapped;
                }
                else if (lineNumber == 200 && columnNumber == 243)
                {
                    this.obj45.DragItemsStarting -= obj45DragItemsStarting;
                }
                else if (lineNumber == 200 && columnNumber == 296)
                {
                    this.obj45.DragItemsCompleted -= obj45DragItemsCompleted;
                }
                else if (lineNumber == 209 && columnNumber == 75)
                {
                    this.obj47.Click -= obj47Click;
                }
                else if (lineNumber == 187 && columnNumber == 48)
                {
                    isobj53SourceDisabled = true;
                }
                else if (lineNumber == 187 && columnNumber == 103)
                {
                    isobj53VisibilityDisabled = true;
                }
                else if (lineNumber == 188 && columnNumber == 90)
                {
                    isobj54VisibilityDisabled = true;
                }
                else if (lineNumber == 189 && columnNumber == 57)
                {
                    isobj55TextDisabled = true;
                }
                else if (lineNumber == 189 && columnNumber == 173)
                {
                    isobj55VisibilityDisabled = true;
                }
                else if (lineNumber == 191 && columnNumber == 114)
                {
                    isobj56VisibilityDisabled = true;
                }
                else if (lineNumber == 192 && columnNumber == 36)
                {
                    isobj57TextDisabled = true;
                }
                else if (lineNumber == 194 && columnNumber == 36)
                {
                    isobj58TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 7: // PlayerView.xaml line 172
                        this.obj7 = (global::Windows.UI.Xaml.Controls.ProgressBar)target;
                        break;
                    case 9: // PlayerView.xaml line 233
                        this.obj9 = (global::Windows.UI.Xaml.Controls.SplitView)target;
                        this.bindingsTracking.RegisterTwoWayListener_9(this.obj9);
                        break;
                    case 10: // PlayerView.xaml line 281
                        this.obj10 = (global::Windows.UI.Xaml.Controls.ContentDialog)target;
                        this.obj10PrimaryButtonClick = (global::Windows.UI.Xaml.Controls.ContentDialog p0, global::Windows.UI.Xaml.Controls.ContentDialogButtonClickEventArgs p1) =>
                        {
                            this.dataRoot.SavePlaylist();
                        };
                        ((global::Windows.UI.Xaml.Controls.ContentDialog)target).PrimaryButtonClick += obj10PrimaryButtonClick;
                        break;
                    case 11: // PlayerView.xaml line 289
                        this.obj11 = (global::Windows.UI.Xaml.Controls.ContentDialog)target;
                        this.obj11PrimaryButtonClick = (global::Windows.UI.Xaml.Controls.ContentDialog p0, global::Windows.UI.Xaml.Controls.ContentDialogButtonClickEventArgs p1) =>
                        {
                            this.dataRoot.ConfirmDelete();
                        };
                        ((global::Windows.UI.Xaml.Controls.ContentDialog)target).PrimaryButtonClick += obj11PrimaryButtonClick;
                        break;
                    case 13: // PlayerView.xaml line 300
                        this.obj13 = (global::Windows.UI.Xaml.Controls.ProgressBar)target;
                        this.obj13PointerEntered = (global::System.Object p0, global::Windows.UI.Xaml.Input.PointerRoutedEventArgs p1) =>
                        {
                            this.dataRoot.CursorShowHand();
                        };
                        ((global::Windows.UI.Xaml.Controls.ProgressBar)target).PointerEntered += obj13PointerEntered;
                        this.obj13PointerExited = (global::System.Object p0, global::Windows.UI.Xaml.Input.PointerRoutedEventArgs p1) =>
                        {
                            this.dataRoot.CursorShowArrow();
                        };
                        ((global::Windows.UI.Xaml.Controls.ProgressBar)target).PointerExited += obj13PointerExited;
                        break;
                    case 15: // PlayerView.xaml line 326
                        this.obj15 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        this.obj15Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.RW();
                        };
                        ((global::Windows.UI.Xaml.Controls.AppBarButton)target).Click += obj15Click;
                        break;
                    case 16: // PlayerView.xaml line 331
                        this.obj16 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        this.obj16Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.TogglePlayPause();
                        };
                        ((global::Windows.UI.Xaml.Controls.AppBarButton)target).Click += obj16Click;
                        break;
                    case 17: // PlayerView.xaml line 340
                        this.obj17 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        this.obj17Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.FF();
                        };
                        ((global::Windows.UI.Xaml.Controls.AppBarButton)target).Click += obj17Click;
                        break;
                    case 18: // PlayerView.xaml line 346
                        this.obj18 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        this.obj18Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ToggleShuffle();
                        };
                        ((global::Windows.UI.Xaml.Controls.AppBarButton)target).Click += obj18Click;
                        break;
                    case 19: // PlayerView.xaml line 351
                        this.obj19 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        this.obj19Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ToggleRepeatMode();
                        };
                        ((global::Windows.UI.Xaml.Controls.AppBarButton)target).Click += obj19Click;
                        break;
                    case 20: // PlayerView.xaml line 352
                        this.obj20 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        break;
                    case 21: // PlayerView.xaml line 333
                        this.obj21 = (global::Windows.UI.Xaml.Controls.ProgressRing)target;
                        break;
                    case 22: // PlayerView.xaml line 334
                        this.obj22 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        break;
                    case 23: // PlayerView.xaml line 316
                        this.obj23 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    case 24: // PlayerView.xaml line 317
                        this.obj24 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    case 25: // PlayerView.xaml line 318
                        this.obj25 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 27: // PlayerView.xaml line 320
                        this.obj27 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 29: // PlayerView.xaml line 322
                        this.obj29 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 30: // PlayerView.xaml line 292
                        this.obj30 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 31: // PlayerView.xaml line 283
                        this.obj31 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.obj31TextChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.TextChangedEventArgs p1) =>
                        {
                            this.dataRoot.CheckIfNameTaken();
                        };
                        ((global::Windows.UI.Xaml.Controls.TextBox)target).TextChanged += obj31TextChanged;
                        this.bindingsTracking.RegisterTwoWayListener_31(this.obj31);
                        break;
                    case 32: // PlayerView.xaml line 285
                        this.obj32 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 33: // PlayerView.xaml line 248
                        this.obj33 = (global::Windows.UI.Xaml.Controls.ListBox)target;
                        break;
                    case 39: // PlayerView.xaml line 242
                        this.obj39 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        this.obj39Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.TogglePlaylistPane();
                        };
                        ((global::Windows.UI.Xaml.Controls.AppBarButton)target).Click += obj39Click;
                        break;
                    case 40: // PlayerView.xaml line 243
                        this.obj40 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        this.obj40Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.AddFiles();
                        };
                        ((global::Windows.UI.Xaml.Controls.AppBarButton)target).Click += obj40Click;
                        break;
                    case 41: // PlayerView.xaml line 244
                        this.obj41 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        this.obj41Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.AddFolder();
                        };
                        ((global::Windows.UI.Xaml.Controls.AppBarButton)target).Click += obj41Click;
                        break;
                    case 42: // PlayerView.xaml line 245
                        this.obj42 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        this.obj42Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.OpenSaveDialog();
                        };
                        ((global::Windows.UI.Xaml.Controls.AppBarButton)target).Click += obj42Click;
                        break;
                    case 43: // PlayerView.xaml line 246
                        this.obj43 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        this.obj43Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ClearPlaylist();
                        };
                        ((global::Windows.UI.Xaml.Controls.AppBarButton)target).Click += obj43Click;
                        break;
                    case 45: // PlayerView.xaml line 200
                        this.obj45 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        this.obj45DoubleTapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.PlaylistItem_DoubleTapped();
                        };
                        ((global::Windows.UI.Xaml.Controls.ListView)target).DoubleTapped += obj45DoubleTapped;
                        this.obj45DragItemsStarting = (global::System.Object p0, global::Windows.UI.Xaml.Controls.DragItemsStartingEventArgs p1) =>
                        {
                            this.dataRoot.Playlist_DragItemsStart();
                        };
                        ((global::Windows.UI.Xaml.Controls.ListView)target).DragItemsStarting += obj45DragItemsStarting;
                        this.obj45DragItemsCompleted = (global::Windows.UI.Xaml.Controls.ListViewBase p0, global::Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs p1) =>
                        {
                            this.dataRoot.Playlist_DragItemsCompleted();
                        };
                        ((global::Windows.UI.Xaml.Controls.ListView)target).DragItemsCompleted += obj45DragItemsCompleted;
                        this.bindingsTracking.RegisterTwoWayListener_45(this.obj45);
                        break;
                    case 47: // PlayerView.xaml line 209
                        this.obj47 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)target;
                        this.obj47Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.DeleteFlyoutItem();
                        };
                        ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)target).Click += obj47Click;
                        break;
                    case 53: // PlayerView.xaml line 187
                        this.obj53 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    case 54: // PlayerView.xaml line 188
                        this.obj54 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    case 55: // PlayerView.xaml line 189
                        this.obj55 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 56: // PlayerView.xaml line 191
                        this.obj56 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                        break;
                    case 57: // PlayerView.xaml line 192
                        this.obj57 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 58: // PlayerView.xaml line 194
                        this.obj58 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IPlayerView_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Orange_Music_Player.PlayerView)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Orange_Music_Player.PlayerView obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_player(obj.player, phase);
                        this.Update_ShowOpenPane(obj.ShowOpenPane, phase);
                        this.Update_OkToSave(obj.OkToSave, phase);
                        this.Update_PlaylistToDelete(obj.PlaylistToDelete, phase);
                        this.Update_PlaylistNameToSave(obj.PlaylistNameToSave, phase);
                        this.Update_PlaylistNameTaken(obj.PlaylistNameTaken, phase);
                        this.Update_SavedPlaylists(obj.SavedPlaylists, phase);
                    }
                }
            }
            private void Update_player(global::Orange_Music_Player.Player obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_player(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_player_IsBusy(obj.IsBusy, phase);
                        this.Update_player_PlayProgress(obj.PlayProgress, phase);
                        this.Update_player_IsWaiting(obj.IsWaiting, phase);
                        this.Update_player_Playlist(obj.Playlist, phase);
                        this.Update_player_RepeatMode(obj.RepeatMode, phase);
                        this.Update_player_IsPlaying(obj.IsPlaying, phase);
                        this.Update_player_NowPlaying(obj.NowPlaying, phase);
                        this.Update_player_TargetIndex(obj.TargetIndex, phase);
                    }
                }
            }
            private void Update_player_IsBusy(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // PlayerView.xaml line 172
                    if (!isobj7IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj7, obj);
                    }
                    // PlayerView.xaml line 172
                    if (!isobj7VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj7, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                    // PlayerView.xaml line 242
                    if (!isobj39IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj39, (global::System.Boolean)this.LookupConverter("BoolNegationConverter").Convert(obj, typeof(global::System.Boolean), null, null));
                    }
                    // PlayerView.xaml line 245
                    if (!isobj42IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj42, (global::System.Boolean)this.LookupConverter("BoolNegationConverter").Convert(obj, typeof(global::System.Boolean), null, null));
                    }
                    // PlayerView.xaml line 246
                    if (!isobj43IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj43, (global::System.Boolean)this.LookupConverter("BoolNegationConverter").Convert(obj, typeof(global::System.Boolean), null, null));
                    }
                }
            }
            private void Update_ShowOpenPane(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // PlayerView.xaml line 233
                    if (!isobj9IsPaneOpenDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_SplitView_IsPaneOpen(this.obj9, obj);
                    }
                }
            }
            private void Update_OkToSave(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // PlayerView.xaml line 281
                    if (!isobj10IsPrimaryButtonEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ContentDialog_IsPrimaryButtonEnabled(this.obj10, obj);
                    }
                }
            }
            private void Update_player_PlayProgress(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // PlayerView.xaml line 300
                    if (!isobj13ValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_RangeBase_Value(this.obj13, obj);
                    }
                }
            }
            private void Update_player_IsWaiting(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // PlayerView.xaml line 331
                    if (!isobj16IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj16, (global::System.Boolean)this.LookupConverter("BoolNegationConverter").Convert(obj, typeof(global::System.Boolean), null, null));
                    }
                    // PlayerView.xaml line 333
                    if (!isobj21IsActiveDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ProgressRing_IsActive(this.obj21, obj);
                    }
                    // PlayerView.xaml line 333
                    if (!isobj21VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj21, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                    // PlayerView.xaml line 334
                    if (!isobj22VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj22, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityInversionConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_player_Playlist(global::Orange_Music_Player.Playlist obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_player_Playlist(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_player_Playlist_Shuffle(obj.Shuffle, phase);
                        this.Update_player_Playlist_Items(obj.Items, phase);
                    }
                }
            }
            private void Update_player_Playlist_Shuffle(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // PlayerView.xaml line 346
                    if (!isobj18OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj18, (global::System.Double)this.LookupConverter("BoolToOpacityConverter").Convert(obj, typeof(global::System.Double), null, null));
                    }
                }
            }
            private void Update_player_RepeatMode(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // PlayerView.xaml line 351
                    if (!isobj19OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj19, (global::System.Double)this.LookupConverter("ZeroModeToOpacityConverter").Convert(obj, typeof(global::System.Double), null, null));
                    }
                    // PlayerView.xaml line 352
                    if (!isobj20SymbolDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_SymbolIcon_Symbol(this.obj20, (global::Windows.UI.Xaml.Controls.Symbol)this.LookupConverter("RepeatModeToSymbolConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Controls.Symbol), null, null));
                    }
                }
            }
            private void Update_player_IsPlaying(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // PlayerView.xaml line 334
                    if (!isobj22SymbolDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_SymbolIcon_Symbol(this.obj22, (global::Windows.UI.Xaml.Controls.Symbol)this.LookupConverter("PlayingToSymbolConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Controls.Symbol), null, null));
                    }
                }
            }
            private void Update_player_NowPlaying(global::Orange_Music_Player.PlaylistItem obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_player_NowPlaying_Cover(obj.Cover, phase);
                        this.Update_player_NowPlaying_Title(obj.Title, phase);
                        this.Update_player_NowPlaying_Album(obj.Album, phase);
                        this.Update_player_NowPlaying_Artist(obj.Artist, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // PlayerView.xaml line 187
                    if (!isobj53VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj53, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("EmptyObjectToHiddenConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                    // PlayerView.xaml line 189
                    if (!isobj55VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj55, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("EmptyObjectToHiddenConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                    // PlayerView.xaml line 191
                    if (!isobj56VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj56, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("EmptyObjectToHiddenConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_player_NowPlaying_Cover(global::Windows.UI.Xaml.Media.Imaging.BitmapImage obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // PlayerView.xaml line 316
                    if (!isobj23SourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Image_Source(this.obj23, obj, null);
                    }
                    // PlayerView.xaml line 317
                    if (!isobj24VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj24, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("EmptyObjectToHiddenConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), "True", null));
                    }
                    // PlayerView.xaml line 187
                    if (!isobj53SourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Image_Source(this.obj53, obj, null);
                    }
                    // PlayerView.xaml line 188
                    if (!isobj54VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj54, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("EmptyObjectToHiddenConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), "True", null));
                    }
                }
            }
            private void Update_player_NowPlaying_Title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // PlayerView.xaml line 318
                    if (!isobj25TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj25, obj, null);
                    }
                    // PlayerView.xaml line 189
                    if (!isobj55TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj55, obj, null);
                    }
                }
            }
            private void Update_player_NowPlaying_Album(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // PlayerView.xaml line 320
                    if (!isobj27TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj27, obj, null);
                    }
                    // PlayerView.xaml line 192
                    if (!isobj57TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj57, obj, null);
                    }
                }
            }
            private void Update_player_NowPlaying_Artist(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // PlayerView.xaml line 322
                    if (!isobj29TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj29, obj, null);
                    }
                    // PlayerView.xaml line 194
                    if (!isobj58TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj58, obj, null);
                    }
                }
            }
            private void Update_PlaylistToDelete(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // PlayerView.xaml line 292
                    if (!isobj30TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj30, obj, null);
                    }
                }
            }
            private void Update_PlaylistNameToSave(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // PlayerView.xaml line 283
                    if (!isobj31TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj31, obj, null);
                    }
                }
            }
            private void Update_PlaylistNameTaken(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // PlayerView.xaml line 285
                    if (!isobj32VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj32, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_SavedPlaylists(global::Orange_Music_Player.PlaylistReferenceCollection<global::Orange_Music_Player.PlaylistReference> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_SavedPlaylists(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // PlayerView.xaml line 248
                    if (!isobj33ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj33, obj, null);
                    }
                }
            }
            private void Update_player_Playlist_Items(global::System.Collections.ObjectModel.ObservableCollection<global::Orange_Music_Player.PlaylistItem> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_player_Playlist_Items(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // PlayerView.xaml line 200
                    if (!isobj45ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj45, obj, null);
                    }
                }
            }
            private void Update_player_TargetIndex(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // PlayerView.xaml line 200
                    if (!isobj45SelectedIndexDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(this.obj45, obj);
                    }
                }
            }
            private void UpdateTwoWay_9_IsPaneOpen()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.ShowOpenPane = this.obj9.IsPaneOpen;
                    }
                }
            }
            private void UpdateTwoWay_31_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.PlaylistNameToSave = this.obj31.Text;
                    }
                }
            }
            private void UpdateTwoWay_45_SelectedIndex()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.player != null)
                        {
                            this.dataRoot.player.TargetIndex = this.obj45.SelectedIndex;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class PlayerView_obj1_BindingsTracking
            {
                private global::System.WeakReference<PlayerView_obj1_Bindings> weakRefToBindingObj; 

                public PlayerView_obj1_BindingsTracking(PlayerView_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<PlayerView_obj1_Bindings>(obj);
                }

                public PlayerView_obj1_Bindings TryGetBindingObject()
                {
                    PlayerView_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_player(null);
                    UpdateChildListeners_player_Playlist(null);
                    UpdateChildListeners_SavedPlaylists(null);
                    UpdateChildListeners_player_Playlist_Items(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    PlayerView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Orange_Music_Player.PlayerView obj = sender as global::Orange_Music_Player.PlayerView;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_player(obj.player, DATA_CHANGED);
                                bindings.Update_ShowOpenPane(obj.ShowOpenPane, DATA_CHANGED);
                                bindings.Update_OkToSave(obj.OkToSave, DATA_CHANGED);
                                bindings.Update_PlaylistToDelete(obj.PlaylistToDelete, DATA_CHANGED);
                                bindings.Update_PlaylistNameToSave(obj.PlaylistNameToSave, DATA_CHANGED);
                                bindings.Update_PlaylistNameTaken(obj.PlaylistNameTaken, DATA_CHANGED);
                                bindings.Update_SavedPlaylists(obj.SavedPlaylists, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "player":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_player(obj.player, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ShowOpenPane":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ShowOpenPane(obj.ShowOpenPane, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "OkToSave":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_OkToSave(obj.OkToSave, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PlaylistToDelete":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaylistToDelete(obj.PlaylistToDelete, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PlaylistNameToSave":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaylistNameToSave(obj.PlaylistNameToSave, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PlaylistNameTaken":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaylistNameTaken(obj.PlaylistNameTaken, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SavedPlaylists":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SavedPlaylists(obj.SavedPlaylists, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::Orange_Music_Player.PlayerView obj)
                {
                    PlayerView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void PropertyChanged_player(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    PlayerView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Orange_Music_Player.Player obj = sender as global::Orange_Music_Player.Player;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_player_IsBusy(obj.IsBusy, DATA_CHANGED);
                                bindings.Update_player_PlayProgress(obj.PlayProgress, DATA_CHANGED);
                                bindings.Update_player_IsWaiting(obj.IsWaiting, DATA_CHANGED);
                                bindings.Update_player_Playlist(obj.Playlist, DATA_CHANGED);
                                bindings.Update_player_RepeatMode(obj.RepeatMode, DATA_CHANGED);
                                bindings.Update_player_IsPlaying(obj.IsPlaying, DATA_CHANGED);
                                bindings.Update_player_NowPlaying(obj.NowPlaying, DATA_CHANGED);
                                bindings.Update_player_TargetIndex(obj.TargetIndex, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsBusy":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_player_IsBusy(obj.IsBusy, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PlayProgress":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_player_PlayProgress(obj.PlayProgress, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsWaiting":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_player_IsWaiting(obj.IsWaiting, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Playlist":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_player_Playlist(obj.Playlist, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "RepeatMode":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_player_RepeatMode(obj.RepeatMode, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsPlaying":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_player_IsPlaying(obj.IsPlaying, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NowPlaying":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_player_NowPlaying(obj.NowPlaying, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TargetIndex":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_player_TargetIndex(obj.TargetIndex, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Orange_Music_Player.Player cache_player = null;
                public void UpdateChildListeners_player(global::Orange_Music_Player.Player obj)
                {
                    if (obj != cache_player)
                    {
                        if (cache_player != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_player).PropertyChanged -= PropertyChanged_player;
                            cache_player = null;
                        }
                        if (obj != null)
                        {
                            cache_player = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_player;
                        }
                    }
                }
                public void PropertyChanged_player_Playlist(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    PlayerView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Orange_Music_Player.Playlist obj = sender as global::Orange_Music_Player.Playlist;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_player_Playlist_Shuffle(obj.Shuffle, DATA_CHANGED);
                                bindings.Update_player_Playlist_Items(obj.Items, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Shuffle":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_player_Playlist_Shuffle(obj.Shuffle, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Items":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_player_Playlist_Items(obj.Items, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Orange_Music_Player.Playlist cache_player_Playlist = null;
                public void UpdateChildListeners_player_Playlist(global::Orange_Music_Player.Playlist obj)
                {
                    if (obj != cache_player_Playlist)
                    {
                        if (cache_player_Playlist != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_player_Playlist).PropertyChanged -= PropertyChanged_player_Playlist;
                            cache_player_Playlist = null;
                        }
                        if (obj != null)
                        {
                            cache_player_Playlist = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_player_Playlist;
                        }
                    }
                }
                public void PropertyChanged_SavedPlaylists(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    PlayerView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Orange_Music_Player.PlaylistReferenceCollection<global::Orange_Music_Player.PlaylistReference> obj = sender as global::Orange_Music_Player.PlaylistReferenceCollection<global::Orange_Music_Player.PlaylistReference>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_SavedPlaylists(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    PlayerView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Orange_Music_Player.PlaylistReferenceCollection<global::Orange_Music_Player.PlaylistReference> obj = sender as global::Orange_Music_Player.PlaylistReferenceCollection<global::Orange_Music_Player.PlaylistReference>;
                    }
                }
                private global::Orange_Music_Player.PlaylistReferenceCollection<global::Orange_Music_Player.PlaylistReference> cache_SavedPlaylists = null;
                public void UpdateChildListeners_SavedPlaylists(global::Orange_Music_Player.PlaylistReferenceCollection<global::Orange_Music_Player.PlaylistReference> obj)
                {
                    if (obj != cache_SavedPlaylists)
                    {
                        if (cache_SavedPlaylists != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_SavedPlaylists).PropertyChanged -= PropertyChanged_SavedPlaylists;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_SavedPlaylists).CollectionChanged -= CollectionChanged_SavedPlaylists;
                            cache_SavedPlaylists = null;
                        }
                        if (obj != null)
                        {
                            cache_SavedPlaylists = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_SavedPlaylists;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_SavedPlaylists;
                        }
                    }
                }
                public void PropertyChanged_player_Playlist_Items(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    PlayerView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::Orange_Music_Player.PlaylistItem> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::Orange_Music_Player.PlaylistItem>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_player_Playlist_Items(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    PlayerView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::Orange_Music_Player.PlaylistItem> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::Orange_Music_Player.PlaylistItem>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::Orange_Music_Player.PlaylistItem> cache_player_Playlist_Items = null;
                public void UpdateChildListeners_player_Playlist_Items(global::System.Collections.ObjectModel.ObservableCollection<global::Orange_Music_Player.PlaylistItem> obj)
                {
                    if (obj != cache_player_Playlist_Items)
                    {
                        if (cache_player_Playlist_Items != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_player_Playlist_Items).PropertyChanged -= PropertyChanged_player_Playlist_Items;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_player_Playlist_Items).CollectionChanged -= CollectionChanged_player_Playlist_Items;
                            cache_player_Playlist_Items = null;
                        }
                        if (obj != null)
                        {
                            cache_player_Playlist_Items = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_player_Playlist_Items;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_player_Playlist_Items;
                        }
                    }
                }
                public void RegisterTwoWayListener_9(global::Windows.UI.Xaml.Controls.SplitView sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.SplitView.IsPaneOpenProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_9_IsPaneOpen();
                        }
                    });
                }
                public void RegisterTwoWayListener_31(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBox.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_31_Text();
                        }
                    });
                }
                public void RegisterTwoWayListener_45(global::Windows.UI.Xaml.Controls.ListView sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedIndexProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_45_SelectedIndex();
                        }
                    });
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // PlayerView.xaml line 98
                {
                    global::Windows.UI.Xaml.Controls.RelativePanel element2 = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                    ((global::Windows.UI.Xaml.Controls.RelativePanel)element2).DragOver += this.Playlist_DragOver;
                    ((global::Windows.UI.Xaml.Controls.RelativePanel)element2).Drop += this.Playlist_Drop;
                }
                break;
            case 3: // PlayerView.xaml line 102
                {
                    this.Narrow = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 4: // PlayerView.xaml line 128
                {
                    this.MediumNarrow = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 5: // PlayerView.xaml line 147
                {
                    this.Medium = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 6: // PlayerView.xaml line 158
                {
                    this.Wide = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 8: // PlayerView.xaml line 175
                {
                    this.PlaylistContainer = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 9: // PlayerView.xaml line 233
                {
                    this.FileCommand = (global::Windows.UI.Xaml.Controls.SplitView)(target);
                }
                break;
            case 10: // PlayerView.xaml line 281
                {
                    this.SavePlaylistDialog = (global::Windows.UI.Xaml.Controls.ContentDialog)(target);
                }
                break;
            case 11: // PlayerView.xaml line 289
                {
                    this.ConfirmDeleteDialog = (global::Windows.UI.Xaml.Controls.ContentDialog)(target);
                }
                break;
            case 12: // PlayerView.xaml line 298
                {
                    this.Transport = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 13: // PlayerView.xaml line 300
                {
                    this.PlayProgressBar = (global::Windows.UI.Xaml.Controls.ProgressBar)(target);
                    ((global::Windows.UI.Xaml.Controls.ProgressBar)this.PlayProgressBar).PointerPressed += this.ProgressBarSeek;
                    ((global::Windows.UI.Xaml.Controls.ProgressBar)this.PlayProgressBar).PointerReleased += this.ProgressBarSeek;
                }
                break;
            case 14: // PlayerView.xaml line 302
                {
                    this.TransportControls = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 23: // PlayerView.xaml line 316
                {
                    this.TransportCoverImage = (global::Windows.UI.Xaml.Controls.Image)(target);
                }
                break;
            case 24: // PlayerView.xaml line 317
                {
                    this.TransportCoverDefault = (global::Windows.UI.Xaml.Controls.Image)(target);
                }
                break;
            case 25: // PlayerView.xaml line 318
                {
                    this.TransportTitle = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 26: // PlayerView.xaml line 319
                {
                    this.TransportTitleDivider = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 27: // PlayerView.xaml line 320
                {
                    this.TransportAlbum = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 28: // PlayerView.xaml line 321
                {
                    this.TransportAlbumDivider = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 29: // PlayerView.xaml line 322
                {
                    this.TransportArtist = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 31: // PlayerView.xaml line 283
                {
                    this.SavePlaylistName = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 32: // PlayerView.xaml line 285
                {
                    this.NameTakenError = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 33: // PlayerView.xaml line 248
                {
                    this.PlaylistMenu = (global::Windows.UI.Xaml.Controls.ListBox)(target);
                }
                break;
            case 35: // PlayerView.xaml line 257
                {
                    global::Windows.UI.Xaml.Controls.Grid element35 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                    ((global::Windows.UI.Xaml.Controls.Grid)element35).Tapped += this.OpenPlaylist;
                }
                break;
            case 37: // PlayerView.xaml line 265
                {
                    global::Windows.UI.Xaml.Controls.Button element37 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element37).Tapped += this.AddToExistingPlaylist;
                }
                break;
            case 38: // PlayerView.xaml line 268
                {
                    global::Windows.UI.Xaml.Controls.Button element38 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element38).Tapped += this.DeletePlaylist;
                }
                break;
            case 39: // PlayerView.xaml line 242
                {
                    this.OpenPlaylistButton = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                }
                break;
            case 40: // PlayerView.xaml line 243
                {
                    this.AddFilesButton = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                }
                break;
            case 41: // PlayerView.xaml line 244
                {
                    this.AddFolderButton = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                }
                break;
            case 42: // PlayerView.xaml line 245
                {
                    this.SavePlaylistButton = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                }
                break;
            case 43: // PlayerView.xaml line 246
                {
                    this.ClearPlaylistButton = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                }
                break;
            case 44: // PlayerView.xaml line 177
                {
                    this.PlaylistHeaderAndImageContainer = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 45: // PlayerView.xaml line 200
                {
                    this.PlaylistView = (global::Windows.UI.Xaml.Controls.ListView)(target);
                    ((global::Windows.UI.Xaml.Controls.ListView)this.PlaylistView).RightTapped += this.ShowPlaylistFlyout;
                    ((global::Windows.UI.Xaml.Controls.ListView)this.PlaylistView).KeyUp += this.PlaylistList_KeyUp;
                    ((global::Windows.UI.Xaml.Controls.ListView)this.PlaylistView).SelectionChanged += this.ScrollPlaylistItemIntoView;
                }
                break;
            case 46: // PlayerView.xaml line 207
                {
                    this.RemoveItemFlyout = (global::Windows.UI.Xaml.Controls.MenuFlyout)(target);
                }
                break;
            case 47: // PlayerView.xaml line 209
                {
                    this.Remove = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)(target);
                }
                break;
            case 53: // PlayerView.xaml line 187
                {
                    this.CoverImage = (global::Windows.UI.Xaml.Controls.Image)(target);
                }
                break;
            case 54: // PlayerView.xaml line 188
                {
                    this.CoverImageDefault = (global::Windows.UI.Xaml.Controls.Image)(target);
                }
                break;
            case 55: // PlayerView.xaml line 189
                {
                    this.NowPlayingTitle = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // PlayerView.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    PlayerView_obj1_Bindings bindings = new PlayerView_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 35: // PlayerView.xaml line 257
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element35 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    PlayerView_obj35_Bindings bindings = new PlayerView_obj35_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element35.DataContext);
                    element35.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element35, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element35, bindings);
                }
                break;
            case 49: // PlayerView.xaml line 215
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element49 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    PlayerView_obj49_Bindings bindings = new PlayerView_obj49_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element49.DataContext);
                    element49.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element49, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element49, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

