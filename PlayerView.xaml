<Page
    x:Class="Orange_Music_Player.PlayerView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Orange_Music_Player"
    xmlns:oe="using:Orange_Music_Player.AttachedProperties"
    xmlns:converters="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:oconverters="using:Orange_Music_Player.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <Page.Resources>
        
        <converters:BoolNegationConverter x:Key="BoolNegationConverter"/>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:BoolToObjectConverter x:Key="BoolToVisibilityInversionConverter" TrueValue="Collapsed" FalseValue="Visible"/>
        <converters:BoolToObjectConverter x:Key="BoolToOpacityConverter" TrueValue="1.0" FalseValue="0.3"/>
        <converters:EmptyStringToObjectConverter x:Key="EmptyStringToBoolConverter" EmptyValue="False" NotEmptyValue="True"/>
        <converters:EmptyStringToObjectConverter x:Key="EmptyStringToHiddenConverter" EmptyValue="Collapsed" NotEmptyValue="Visible"/>
        <converters:EmptyCollectionToObjectConverter x:Key="EmptyCollectionToHiddenConverter" EmptyValue="Collapsed" NotEmptyValue="Visible"/>
        <converters:EmptyObjectToObjectConverter x:Key="EmptyObjectToHiddenConverter" EmptyValue="Collapsed" NotEmptyValue="Visible"/>
        <oconverters:PlayingToSymbolConverter x:Key="PlayingToSymbolConverter"/>
        <oconverters:ZeroModeToOpacityConverter x:Key="ZeroModeToOpacityConverter"/>
        <oconverters:RepeatModeToSymbolConverter x:Key="RepeatModeToSymbolConverter"/>

        <Style x:Key="PlaylistPanel" TargetType="RelativePanel">
            <Setter Property="Padding" Value="52,12,0,52"/>
            <Setter Property="RelativePanel.AlignTopWithPanel" Value="True"/>
            <Setter Property="RelativePanel.AlignLeftWithPanel" Value="True"/>
            <Setter Property="RelativePanel.AlignRightWithPanel" Value="True"/>
            <Setter Property="RelativePanel.AlignBottomWith" Value="Transport"/>
        </Style>
        <Style x:Key="NowPlayingPanel" TargetType="Grid">
            <Setter Property="Padding" Value="12,0"/>
        </Style>
        <Style x:Key="CoverImageStyle" TargetType="Image">
            <Setter Property="Width" Value="375"/>
            <Setter Property="Margin" Value="0,0,0,8"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="NowPlayingDetail" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
        </Style>
        <Style x:Key="PlaylistListView" TargetType="ListView">
            <Setter Property="RelativePanel.RightOf" Value="PlaylistHeaderAndImageContainer"/>
            <Setter Property="RelativePanel.AlignRightWithPanel" Value="True"/>
            <Setter Property="Background" Value="{ThemeResource SystemControlBackgroundChromeBlackHighBrush}"/>
            <Setter Property="CanDragItems" Value="True"/>
            <Setter Property="CanReorderItems" Value="True"/>
            <Setter Property="AllowDrop" Value="True"/>
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
        </Style>
        <Style x:Key="PlaylistItemDetail" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style x:Key="FileMenuView" TargetType="SplitView">
            <Setter Property="DisplayMode" Value="CompactOverlay"/>
            <Setter Property="CompactPaneLength" Value="52"/>
            <Setter Property="OpenPaneLength" Value="350"/>
            <Setter Property="PaneBackground" Value="Transparent"/>
            <Setter Property="PanePlacement" Value="Left"/>
            <Setter Property="RelativePanel.AlignTopWithPanel" Value="True"/>
            <Setter Property="RelativePanel.AlignLeftWithPanel" Value="True"/>
            <Setter Property="RelativePanel.Above" Value="Transport"/>
        </Style>
        <Style x:Key="FileMenuItem" TargetType="AppBarButton">
            <Setter Property="Width" Value="52"/>
            <Setter Property="LabelPosition" Value="Collapsed"/>
        </Style>
        <Style x:Key="AvailablePlaylistsItem" TargetType="Grid">
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Padding" Value="12,8,0,8"/>
            <Setter Property="Background" Value="{ThemeResource SystemControlTransparentBrush}"/>
        </Style>
        <Style x:Key="AvailablePlaylistsButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
        </Style>
        <Style x:Key="AvailablePlaylistsButtonText" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
        </Style>
        <Style x:Key="TransportPanel" TargetType="StackPanel">
            <Setter Property="Orientation" Value="Vertical"/>
            <Setter Property="RelativePanel.AlignBottomWithPanel" Value="True"/>
            <Setter Property="RelativePanel.AlignLeftWithPanel" Value="True"/>
            <Setter Property="RelativePanel.AlignRightWithPanel" Value="True"/>
        </Style>
        <Style x:Key="TransportImage" TargetType="Image">
            <Setter Property="Height" Value="48"/>
        </Style>
        <Style x:Key="TransportPlayingText" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
    </Page.Resources>



    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" RequestedTheme="Dark" AllowDrop="True" DragOver="Playlist_DragOver" Drop="Playlist_Drop">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Narrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="PlaylistHeaderAndImageContainer.Padding" Value="0,0,0,14"/>
                        <Setter Target="PlaylistHeaderAndImageContainer.(RelativePanel.AlignLeftWithPanel)" Value="True"/>
                        <Setter Target="PlaylistHeaderAndImageContainer.(RelativePanel.AlignRightWithPanel)" Value="True"/>

                        <Setter Target="CoverImage.Width" Value="275"/>
                        <Setter Target="CoverImageDefault.Width" Value="275"/>

                        <Setter Target="NowPlayingTitle.MaxWidth" Value="275"/>
                        <Setter Target="NowPlayingTitle.FontSize" Value="17"/>

                        <Setter Target="PlaylistView.(RelativePanel.AlignLeftWithPanel)" Value="True"/>
                        <Setter Target="PlaylistView.(RelativePanel.AlignRightWithPanel)" Value="True"/>
                        <Setter Target="PlaylistView.(RelativePanel.Below)" Value="PlaylistHeaderAndImageContainer"/>

                        <Setter Target="TransportTitle.Visibility" Value="Collapsed"/>
                        <Setter Target="TransportArtist.Visibility" Value="Collapsed"/>
                        <Setter Target="TransportAlbum.Visibility" Value="Collapsed"/>
                        <Setter Target="TransportAlbumDivider.Visibility" Value="Collapsed"/>
                        <Setter Target="TransportTitleDivider.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="MediumNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="560"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="PlaylistHeaderAndImageContainer.Padding" Value="0,0,0,14"/>
                        <Setter Target="PlaylistHeaderAndImageContainer.(RelativePanel.AlignLeftWithPanel)" Value="True"/>
                        <Setter Target="PlaylistHeaderAndImageContainer.(RelativePanel.AlignRightWithPanel)" Value="True"/>
                        
                        <Setter Target="CoverImage.Width" Value="300"/>
                        <Setter Target="CoverImageDefault.Width" Value="300"/>

                        <Setter Target="NowPlayingTitle.MaxWidth" Value="300"/>

                        <Setter Target="PlaylistView.(RelativePanel.AlignLeftWithPanel)" Value="True"/>
                        <Setter Target="PlaylistView.(RelativePanel.AlignRightWithPanel)" Value="True"/>
                        <Setter Target="PlaylistView.(RelativePanel.Below)" Value="PlaylistHeaderAndImageContainer"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Medium">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="800"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="CoverImage.Width" Value="375"/>
                        <Setter Target="CoverImageDefault.Width" Value="375"/>
                        
                        <Setter Target="NowPlayingTitle.MaxWidth" Value="375"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Wide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1200"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="CoverImage.Width" Value="460"/>
                        <Setter Target="CoverImageDefault.Width" Value="460"/>
                        
                        <Setter Target="NowPlayingTitle.MaxWidth" Value="460"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        
        <ProgressBar IsIndeterminate="True" IsEnabled="{x:Bind player.IsBusy, Mode=OneWay}" Visibility="{x:Bind player.IsBusy, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" Foreground="{ThemeResource ProgressBarIndeterminateForegroundThemeBrush}" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True"/>
        
        <!-- Cover Image and Now Playing info -->
        <RelativePanel x:Name="PlaylistContainer" Style="{StaticResource PlaylistPanel}">

            <Grid x:Name="PlaylistHeaderAndImageContainer"  Style="{StaticResource NowPlayingPanel}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Image x:Name="CoverImage" Source="{x:Bind player.NowPlaying.Cover, Mode=OneWay}" Visibility="{x:Bind player.NowPlaying, Converter={StaticResource EmptyObjectToHiddenConverter}, Mode=OneWay}" Style="{StaticResource CoverImageStyle}" Grid.Row="0"/>
                    <Image x:Name="CoverImageDefault" Source="/Assets/Default-Cover.png" Visibility="{x:Bind player.NowPlaying.Cover, Converter={StaticResource EmptyObjectToHiddenConverter}, ConverterParameter=True, Mode=OneWay}" Style="{StaticResource CoverImageStyle}" Grid.Row="0"/>
                    <TextBlock x:Name="NowPlayingTitle" Text="{x:Bind player.NowPlaying.Title, Mode=OneWay}" FontSize="18" FontWeight="Medium" HorizontalAlignment="Center" Visibility="{x:Bind player.NowPlaying, Converter={StaticResource EmptyObjectToHiddenConverter}, Mode=OneWay}" Grid.Row="1"
/>
                    <StackPanel Orientation="Horizontal" Spacing="8" HorizontalAlignment="Center" MaxWidth="375" Visibility="{x:Bind player.NowPlaying, Converter={StaticResource EmptyObjectToHiddenConverter}, Mode=OneWay}" Grid.Row="2">
                        <TextBlock Text="{x:Bind player.NowPlaying.Album, Mode=OneWay}" Style="{StaticResource NowPlayingDetail}"/>
                        <TextBlock Text="|" Style="{StaticResource NowPlayingDetail}"/>
                        <TextBlock Text="{x:Bind player.NowPlaying.Artist, Mode=OneWay}" Style="{StaticResource NowPlayingDetail}"/>
                    </StackPanel>
                </Grid>
            </Grid>

            <!-- Playlist -->
            <ListView x:Name="PlaylistView" DoubleTapped="{x:Bind PlaylistItem_DoubleTapped}" RightTapped="ShowPlaylistFlyout" ItemsSource="{x:Bind player.Playlist.Items, Mode=OneWay}" SelectedIndex="{x:Bind player.TargetIndex, Mode=TwoWay}" DragItemsStarting="{x:Bind Playlist_DragItemsStart}" DragItemsCompleted="{x:Bind Playlist_DragItemsCompleted}" KeyUp="PlaylistList_KeyUp" SelectionChanged="ScrollPlaylistItemIntoView" Style="{StaticResource PlaylistListView}">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.Resources>
                    <MenuFlyout x:Name="RemoveItemFlyout">
                        <MenuFlyout.Items>
                            <MenuFlyoutItem x:Name="Remove" Text="Remove" Click="{x:Bind DeleteFlyoutItem}"/>
                        </MenuFlyout.Items>
                    </MenuFlyout>
                </ListView.Resources>
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="local:PlaylistItem">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="{x:Bind Title}" Grid.Row="0" FontWeight="Medium"/>
                            <StackPanel Orientation="Horizontal" Grid.Row="1" Spacing="8">
                                <TextBlock Text="{x:Bind Album}" Style="{StaticResource PlaylistItemDetail}"/>
                                <TextBlock Text="|" Style="{StaticResource PlaylistItemDetail}"/>
                                <TextBlock Text="{x:Bind Artist}" Style="{StaticResource PlaylistItemDetail}"/>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </RelativePanel>

        <!-- File and Playlist Menu -->
        <SplitView x:Name="FileCommand" IsPaneOpen="{x:Bind ShowOpenPane, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource FileMenuView}">

            <SplitView.Pane>
                <Grid Background="{ThemeResource SystemControlBackgroundBaseLowBrush}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="52"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Vertical" Grid.Column="0">
                        <AppBarButton x:Name="OpenPlaylistButton" Icon="MusicInfo" Label="Playlists" Click="{x:Bind TogglePlaylistPane}" Visibility="{Binding Path=SavedPlaylists, Converter={StaticResource EmptyCollectionToHiddenConverter}, Mode=OneWay}" IsEnabled="{x:Bind player.IsBusy, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}" AccessKey="L" ToolTipService.ToolTip="Show Playlists" Style="{StaticResource FileMenuItem}"/>
                        <AppBarButton x:Name="AddFilesButton" Click="{x:Bind AddFiles}" Icon="OpenFile" Label="Add File(s)" AccessKey="O" ToolTipService.ToolTip="Add File(s)" Style="{StaticResource FileMenuItem}"/>
                        <AppBarButton x:Name="AddFolderButton" Click="{x:Bind AddFolder}" Icon="Folder" Label="Add Folder" AccessKey="F" ToolTipService.ToolTip="Add Folder" Style="{StaticResource FileMenuItem}"/>
                        <AppBarButton x:Name="SavePlaylistButton" Click="{x:Bind OpenSaveDialog}" Icon="Save" Label="Save" AccessKey="S" IsEnabled="{x:Bind player.IsBusy, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}" ToolTipService.ToolTip="Save Playlist" Style="{StaticResource FileMenuItem}"/>
                        <AppBarButton x:Name="ClearPlaylistButton" Click="{x:Bind ClearPlaylist}" Icon="Delete" Label="Clear" AccessKey="Delete" IsEnabled="{x:Bind player.IsBusy, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}" ToolTipService.ToolTip="Clear Playlist" Style="{StaticResource FileMenuItem}"/>
                    </StackPanel>
                    <ListBox x:Name="PlaylistMenu" Height="{Binding ElementName=FileCommand, Path=ActualHeight}" ScrollViewer.VerticalScrollMode="Auto" ItemsSource="{x:Bind SavedPlaylists, Mode=OneWay}" Grid.Column="1">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                                <Setter Property="Padding" Value="0"></Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>
                            <DataTemplate x:DataType="local:PlaylistReference">
                                <Grid oe:Ap.PlaylistId="{x:Bind Id, Mode=OneWay}" Tapped="OpenPlaylist" Style="{StaticResource AvailablePlaylistsItem}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{x:Bind Name, Mode=OneWay}" Grid.Column="0" VerticalAlignment="Center" />
                                    <StackPanel Orientation="Horizontal" Grid.Column="2">
                                        <Button oe:Ap.PlaylistId="{x:Bind Id, Mode=OneWay}" oe:Ap.PlaylistName="{x:Bind Name, Mode=OneWay}" ToolTipService.ToolTip="Add this playlist to the current one" Tapped="AddToExistingPlaylist" Style="{StaticResource AvailablePlaylistsButton}">
                                            <TextBlock Text="&#xE710;" Style="{StaticResource AvailablePlaylistsButtonText}"/>
                                        </Button>
                                        <Button oe:Ap.PlaylistId="{x:Bind Id, Mode=OneWay}" oe:Ap.PlaylistName="{x:Bind Name, Mode=OneWay}" ToolTipService.ToolTip="Delete this playlist from disk" Tapped="DeletePlaylist" Style="{StaticResource AvailablePlaylistsButton}">
                                            <TextBlock Text="&#xE74D;" Style="{StaticResource AvailablePlaylistsButtonText}"/>
                                        </Button>
                                    </StackPanel>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </SplitView.Pane>
        </SplitView>

        <!-- Content Dialogs for Saving and Deleting -->
        <ContentDialog x:Name="SavePlaylistDialog" PrimaryButtonText="Save" IsPrimaryButtonEnabled="{x:Bind OkToSave, Mode=OneWay}" CloseButtonText="Cancel" PrimaryButtonClick="{x:Bind SavePlaylist}" DefaultButton="Primary" IsEnabled="True" Visibility="Visible" Title="Save Playlist">
            <StackPanel>
                <TextBox x:Name="SavePlaylistName" Text="{x:Bind PlaylistNameToSave, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="{x:Bind CheckIfNameTaken}" />

                <TextBlock x:Name="NameTakenError" Text="Name already taken." Visibility="{x:Bind PlaylistNameTaken, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"/>
            </StackPanel>
        </ContentDialog>

        <ContentDialog x:Name="ConfirmDeleteDialog" PrimaryButtonText="Ok" IsPrimaryButtonEnabled="True" CloseButtonText="Cancel" PrimaryButtonClick="{x:Bind ConfirmDelete}" Title="Confirm Delete">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Are you sure you want to delete" Margin="0,0,5,0"/>
                <TextBlock Text="{x:Bind PlaylistToDelete, Mode=OneWay}" />
                <TextBlock Text="?"/>
            </StackPanel>
        </ContentDialog>

        <!-- Player Transport Controls -->
        <StackPanel x:Name="Transport" Style="{StaticResource TransportPanel}">
            
            <ProgressBar x:Name="PlayProgressBar" PointerPressed="ProgressBarSeek" PointerReleased="ProgressBarSeek" PointerEntered="{x:Bind CursorShowHand }" PointerExited="{x:Bind CursorShowArrow }" Minimum="0" Maximum="100" Value="{x:Bind player.PlayProgress, Mode=OneWay}" Background="{ThemeResource SystemControlBackgroundBaseMediumHighBrush }" Foreground="OrangeRed" />
            
            <Grid Height="48" VerticalAlignment="Stretch" x:Name="TransportControls" Background="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0" ColumnSpacing="12">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Image x:Name="TransportCoverImage" Source="{x:Bind player.NowPlaying.Cover, Mode=OneWay}" Grid.Column="0" Style="{StaticResource TransportImage}"/>
                    <Image x:Name="TransportCoverDefault" Source="/Assets/Default-Cover.png" Visibility="{x:Bind player.NowPlaying.Cover, Converter={StaticResource EmptyObjectToHiddenConverter}, ConverterParameter=True, Mode=OneWay}" Style="{StaticResource TransportImage}" Grid.Row="0"/>
                    <TextBlock x:Name="TransportTitle" Text="{x:Bind player.NowPlaying.Title, Mode=OneWay}" Grid.Column="1" Style="{StaticResource TransportPlayingText}"/>
                    <SymbolIcon x:Name="TransportTitleDivider" Symbol="OutlineStar" Grid.Column="2"/>
                    <TextBlock x:Name="TransportAlbum" Text="{x:Bind player.NowPlaying.Album, Mode=OneWay}" Grid.Column="3" Style="{StaticResource TransportPlayingText}"/>
                    <SymbolIcon x:Name="TransportAlbumDivider" Symbol="OutlineStar" Grid.Column="4"/>
                    <TextBlock x:Name="TransportArtist" Text="{x:Bind player.NowPlaying.Artist, Mode=OneWay}" Grid.Column="5" Style="{StaticResource TransportPlayingText}"/>
                </Grid>

                <StackPanel Orientation="Horizontal" Grid.Column="1">
                    <AppBarButton Click="{x:Bind RW}" Icon="Previous" LabelPosition="Collapsed" Label="Previous">
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="Shift" Key="Left" />
                        </AppBarButton.KeyboardAccelerators>
                    </AppBarButton>
                    <AppBarButton Click="{x:Bind TogglePlayPause}" LabelPosition="Collapsed" Label="Play" IsEnabled="{x:Bind player.IsWaiting, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}">
                        <StackPanel>
                            <ProgressRing IsActive="{x:Bind player.IsWaiting, Mode=OneWay}" Visibility="{x:Bind player.IsWaiting, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"/>
                            <SymbolIcon Symbol="{x:Bind player.IsPlaying, Converter={StaticResource PlayingToSymbolConverter}, Mode=OneWay}" Visibility="{x:Bind player.IsWaiting, Converter={StaticResource BoolToVisibilityInversionConverter}, Mode=OneWay}"/>
                        </StackPanel>
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="None" Key="Space" />
                        </AppBarButton.KeyboardAccelerators>
                    </AppBarButton>
                    <AppBarButton Click="{x:Bind FF}" Icon="Next" LabelPosition="Collapsed" Label="Next">
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="Shift"  Key="Right" />
                        </AppBarButton.KeyboardAccelerators>
                    </AppBarButton>
                    <AppBarSeparator/>
                    <AppBarButton Click="{x:Bind ToggleShuffle}" Icon="Shuffle" LabelPosition="Collapsed" Label="Shuffle" Opacity="{x:Bind player.Playlist.Shuffle, Converter={StaticResource BoolToOpacityConverter}, Mode=OneWay}">
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="Shift" Key="S" />
                        </AppBarButton.KeyboardAccelerators>
                    </AppBarButton>
                    <AppBarButton Click="{x:Bind ToggleRepeatMode}" LabelPosition="Collapsed" Label="Repeat Mode" Opacity="{x:Bind player.RepeatMode, Converter={StaticResource ZeroModeToOpacityConverter}, Mode=OneWay}">
                        <SymbolIcon Symbol="{x:Bind player.RepeatMode, Converter={StaticResource RepeatModeToSymbolConverter}, Mode=OneWay}"/>
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="Shift" Key="R" />
                        </AppBarButton.KeyboardAccelerators>
                    </AppBarButton>
                </StackPanel>
            </Grid>
        </StackPanel>

    </RelativePanel>

</Page>